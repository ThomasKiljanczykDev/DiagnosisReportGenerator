/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const SettingsIndexLazyImport = createFileRoute('/settings/')()
const ReportsIndexLazyImport = createFileRoute('/reports/')()
const SettingsTestMethodsIndexLazyImport = createFileRoute(
  '/settings/test-methods/',
)()
const SettingsStaffIndexLazyImport = createFileRoute('/settings/staff/')()
const SettingsRecommendationsIndexLazyImport = createFileRoute(
  '/settings/recommendations/',
)()
const SettingsMutationsIndexLazyImport = createFileRoute(
  '/settings/mutations/',
)()
const SettingsIllnessesIndexLazyImport = createFileRoute(
  '/settings/illnesses/',
)()
const SettingsGenesIndexLazyImport = createFileRoute('/settings/genes/')()
const SettingsDiagnosesIndexLazyImport = createFileRoute(
  '/settings/diagnoses/',
)()
const ReportsPatientsIndexLazyImport = createFileRoute('/reports/patients/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const SettingsIndexLazyRoute = SettingsIndexLazyImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/settings/index.lazy').then((d) => d.Route),
)

const ReportsIndexLazyRoute = ReportsIndexLazyImport.update({
  id: '/reports/',
  path: '/reports/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/reports/index.lazy').then((d) => d.Route))

const SettingsTestMethodsIndexLazyRoute =
  SettingsTestMethodsIndexLazyImport.update({
    id: '/settings/test-methods/',
    path: '/settings/test-methods/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/settings/test-methods/index.lazy').then((d) => d.Route),
  )

const SettingsStaffIndexLazyRoute = SettingsStaffIndexLazyImport.update({
  id: '/settings/staff/',
  path: '/settings/staff/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/settings/staff/index.lazy').then((d) => d.Route),
)

const SettingsRecommendationsIndexLazyRoute =
  SettingsRecommendationsIndexLazyImport.update({
    id: '/settings/recommendations/',
    path: '/settings/recommendations/',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/settings/recommendations/index.lazy').then((d) => d.Route),
  )

const SettingsMutationsIndexLazyRoute = SettingsMutationsIndexLazyImport.update(
  {
    id: '/settings/mutations/',
    path: '/settings/mutations/',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/settings/mutations/index.lazy').then((d) => d.Route),
)

const SettingsIllnessesIndexLazyRoute = SettingsIllnessesIndexLazyImport.update(
  {
    id: '/settings/illnesses/',
    path: '/settings/illnesses/',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/settings/illnesses/index.lazy').then((d) => d.Route),
)

const SettingsGenesIndexLazyRoute = SettingsGenesIndexLazyImport.update({
  id: '/settings/genes/',
  path: '/settings/genes/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/settings/genes/index.lazy').then((d) => d.Route),
)

const SettingsDiagnosesIndexLazyRoute = SettingsDiagnosesIndexLazyImport.update(
  {
    id: '/settings/diagnoses/',
    path: '/settings/diagnoses/',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/settings/diagnoses/index.lazy').then((d) => d.Route),
)

const ReportsPatientsIndexLazyRoute = ReportsPatientsIndexLazyImport.update({
  id: '/reports/patients/',
  path: '/reports/patients/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/reports/patients/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/reports/': {
      id: '/reports/'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/reports/patients/': {
      id: '/reports/patients/'
      path: '/reports/patients'
      fullPath: '/reports/patients'
      preLoaderRoute: typeof ReportsPatientsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings/diagnoses/': {
      id: '/settings/diagnoses/'
      path: '/settings/diagnoses'
      fullPath: '/settings/diagnoses'
      preLoaderRoute: typeof SettingsDiagnosesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings/genes/': {
      id: '/settings/genes/'
      path: '/settings/genes'
      fullPath: '/settings/genes'
      preLoaderRoute: typeof SettingsGenesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings/illnesses/': {
      id: '/settings/illnesses/'
      path: '/settings/illnesses'
      fullPath: '/settings/illnesses'
      preLoaderRoute: typeof SettingsIllnessesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings/mutations/': {
      id: '/settings/mutations/'
      path: '/settings/mutations'
      fullPath: '/settings/mutations'
      preLoaderRoute: typeof SettingsMutationsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings/recommendations/': {
      id: '/settings/recommendations/'
      path: '/settings/recommendations'
      fullPath: '/settings/recommendations'
      preLoaderRoute: typeof SettingsRecommendationsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings/staff/': {
      id: '/settings/staff/'
      path: '/settings/staff'
      fullPath: '/settings/staff'
      preLoaderRoute: typeof SettingsStaffIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings/test-methods/': {
      id: '/settings/test-methods/'
      path: '/settings/test-methods'
      fullPath: '/settings/test-methods'
      preLoaderRoute: typeof SettingsTestMethodsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/reports': typeof ReportsIndexLazyRoute
  '/settings': typeof SettingsIndexLazyRoute
  '/reports/patients': typeof ReportsPatientsIndexLazyRoute
  '/settings/diagnoses': typeof SettingsDiagnosesIndexLazyRoute
  '/settings/genes': typeof SettingsGenesIndexLazyRoute
  '/settings/illnesses': typeof SettingsIllnessesIndexLazyRoute
  '/settings/mutations': typeof SettingsMutationsIndexLazyRoute
  '/settings/recommendations': typeof SettingsRecommendationsIndexLazyRoute
  '/settings/staff': typeof SettingsStaffIndexLazyRoute
  '/settings/test-methods': typeof SettingsTestMethodsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/reports': typeof ReportsIndexLazyRoute
  '/settings': typeof SettingsIndexLazyRoute
  '/reports/patients': typeof ReportsPatientsIndexLazyRoute
  '/settings/diagnoses': typeof SettingsDiagnosesIndexLazyRoute
  '/settings/genes': typeof SettingsGenesIndexLazyRoute
  '/settings/illnesses': typeof SettingsIllnessesIndexLazyRoute
  '/settings/mutations': typeof SettingsMutationsIndexLazyRoute
  '/settings/recommendations': typeof SettingsRecommendationsIndexLazyRoute
  '/settings/staff': typeof SettingsStaffIndexLazyRoute
  '/settings/test-methods': typeof SettingsTestMethodsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/reports/': typeof ReportsIndexLazyRoute
  '/settings/': typeof SettingsIndexLazyRoute
  '/reports/patients/': typeof ReportsPatientsIndexLazyRoute
  '/settings/diagnoses/': typeof SettingsDiagnosesIndexLazyRoute
  '/settings/genes/': typeof SettingsGenesIndexLazyRoute
  '/settings/illnesses/': typeof SettingsIllnessesIndexLazyRoute
  '/settings/mutations/': typeof SettingsMutationsIndexLazyRoute
  '/settings/recommendations/': typeof SettingsRecommendationsIndexLazyRoute
  '/settings/staff/': typeof SettingsStaffIndexLazyRoute
  '/settings/test-methods/': typeof SettingsTestMethodsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/reports'
    | '/settings'
    | '/reports/patients'
    | '/settings/diagnoses'
    | '/settings/genes'
    | '/settings/illnesses'
    | '/settings/mutations'
    | '/settings/recommendations'
    | '/settings/staff'
    | '/settings/test-methods'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/reports'
    | '/settings'
    | '/reports/patients'
    | '/settings/diagnoses'
    | '/settings/genes'
    | '/settings/illnesses'
    | '/settings/mutations'
    | '/settings/recommendations'
    | '/settings/staff'
    | '/settings/test-methods'
  id:
    | '__root__'
    | '/'
    | '/reports/'
    | '/settings/'
    | '/reports/patients/'
    | '/settings/diagnoses/'
    | '/settings/genes/'
    | '/settings/illnesses/'
    | '/settings/mutations/'
    | '/settings/recommendations/'
    | '/settings/staff/'
    | '/settings/test-methods/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ReportsIndexLazyRoute: typeof ReportsIndexLazyRoute
  SettingsIndexLazyRoute: typeof SettingsIndexLazyRoute
  ReportsPatientsIndexLazyRoute: typeof ReportsPatientsIndexLazyRoute
  SettingsDiagnosesIndexLazyRoute: typeof SettingsDiagnosesIndexLazyRoute
  SettingsGenesIndexLazyRoute: typeof SettingsGenesIndexLazyRoute
  SettingsIllnessesIndexLazyRoute: typeof SettingsIllnessesIndexLazyRoute
  SettingsMutationsIndexLazyRoute: typeof SettingsMutationsIndexLazyRoute
  SettingsRecommendationsIndexLazyRoute: typeof SettingsRecommendationsIndexLazyRoute
  SettingsStaffIndexLazyRoute: typeof SettingsStaffIndexLazyRoute
  SettingsTestMethodsIndexLazyRoute: typeof SettingsTestMethodsIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ReportsIndexLazyRoute: ReportsIndexLazyRoute,
  SettingsIndexLazyRoute: SettingsIndexLazyRoute,
  ReportsPatientsIndexLazyRoute: ReportsPatientsIndexLazyRoute,
  SettingsDiagnosesIndexLazyRoute: SettingsDiagnosesIndexLazyRoute,
  SettingsGenesIndexLazyRoute: SettingsGenesIndexLazyRoute,
  SettingsIllnessesIndexLazyRoute: SettingsIllnessesIndexLazyRoute,
  SettingsMutationsIndexLazyRoute: SettingsMutationsIndexLazyRoute,
  SettingsRecommendationsIndexLazyRoute: SettingsRecommendationsIndexLazyRoute,
  SettingsStaffIndexLazyRoute: SettingsStaffIndexLazyRoute,
  SettingsTestMethodsIndexLazyRoute: SettingsTestMethodsIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/reports/",
        "/settings/",
        "/reports/patients/",
        "/settings/diagnoses/",
        "/settings/genes/",
        "/settings/illnesses/",
        "/settings/mutations/",
        "/settings/recommendations/",
        "/settings/staff/",
        "/settings/test-methods/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/reports/": {
      "filePath": "reports/index.lazy.tsx"
    },
    "/settings/": {
      "filePath": "settings/index.lazy.tsx"
    },
    "/reports/patients/": {
      "filePath": "reports/patients/index.lazy.tsx"
    },
    "/settings/diagnoses/": {
      "filePath": "settings/diagnoses/index.lazy.tsx"
    },
    "/settings/genes/": {
      "filePath": "settings/genes/index.lazy.tsx"
    },
    "/settings/illnesses/": {
      "filePath": "settings/illnesses/index.lazy.tsx"
    },
    "/settings/mutations/": {
      "filePath": "settings/mutations/index.lazy.tsx"
    },
    "/settings/recommendations/": {
      "filePath": "settings/recommendations/index.lazy.tsx"
    },
    "/settings/staff/": {
      "filePath": "settings/staff/index.lazy.tsx"
    },
    "/settings/test-methods/": {
      "filePath": "settings/test-methods/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
